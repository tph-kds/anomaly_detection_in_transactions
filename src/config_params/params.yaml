artifacts_root: "src/artifacts"

logger:
  name: "anod_logger"
  root_dir: "src/artifacts/logs"
  format_logging: "[%(asctime)s - { %(levelname)s } - { %(module)s } - %(message)s]"
  datefmt_logging: "%m/%d/%Y %H:%M:%S"
  log_dir: "src/artifacts/logs"
  name_file_logs: "running_logs.log"
  service_name: "anod_logs"
  instance_id: "1"

exception:
  error_message: "Error occured in python script: name [{file_name}] =-= line number [{line_number}] =-= error message [{error_message}]"
  error_details: None

data:
  root_dir: "src/artifacts/data"
  stages:
    ingestion: 
      root_dir: "data/"
      download_dir: "src/artifacts/data/ingestion/"
      file_name: "faizaniftikharjanjua/metaverse-financial-transactions-dataset"
      target_name: "dataset.csv"
      metadata_name: "metadata"
    processing:
      root_dir: "src/artifacts/data"
      des_dir: "processed/"
      data_path: "src/artifacts/data/ingestion/metaverse_transactions_dataset.csv"
      unuse_features: ["sending_address", "receiving_address", "ip_prefix"]
    pretraining:
      root_dir: "src/artifacts/data"
      des_dir: "data/pretraining"
      numerical_columns: ["transaction_type", "location_region", "purchase_pattern","age_group"]
      dtype_convert: "int64"
      drop_columns: ["purchase_pattern_high_value", "purchase_pattern_random"]
      RANDOM_SEED: 2024
      TEST_SIZE: 0.2 
      VAL_SIZE: 0.15
  models:
    # random_forest:
    # Initially we will use Random Forest Model
    root_dir: "src/artifacts/models"
    model_name: "random_forest"
    model_path: "random_forest.pkl"
    model_params: {"n_estimators": 100, "max_depth": 5, "random_state": 42}
    model_description: "Random Forest Model"
    
    # gradient_boosting:
    #   root_dir: "src/artifacts/models"
    #   model_name: "gradient_boosting"
    #   model_path: "gradient_boosting.pkl"
    #   model_params: {"n_estimators": 100, "max_depth": 5, "random_state": 42}
    #   model_description: "Gradient Boosting Model"

    # logistic_regression:
    #   root_dir: "src/artifacts/models"
    #   model_name: "logistic_regression"
    #   model_path: "logistic_regression.pkl"
    #   model_params: {"n_estimators": 100, "max_depth": 5, "random_state": 42}
    #   model_description: "Logistic Regression Model"

      


    